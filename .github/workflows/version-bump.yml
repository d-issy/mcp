name: Version Bump Handler

on:
  pull_request:
    types: [closed]
    branches: [main]

permissions:
  contents: write

jobs:
  version-bump:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Determine version bump from labels
        id: version-bump
        run: |
          LABELS='${{ toJson(github.event.pull_request.labels.*.name) }}'
          echo "PR Labels: $LABELS"
          
          CURRENT_VERSION=$(cat .release-please-manifest.json | jq -r '.[".""]' 2>/dev/null || echo "0.1.2")
          echo "Current version: $CURRENT_VERSION"
          
          MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
          MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
          PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
          
          if echo "$LABELS" | grep -q "major"; then
            NEW_VERSION="$((MAJOR + 1)).0.0"
            BUMP_TYPE="major"
          elif echo "$LABELS" | grep -q "minor\|feature"; then
            NEW_VERSION="${MAJOR}.$((MINOR + 1)).0"
            BUMP_TYPE="minor"
          else
            NEW_VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))"
            BUMP_TYPE="patch"
          fi
          
          echo "Version bump type: $BUMP_TYPE"
          echo "New version: $NEW_VERSION"
          echo "bump_type=$BUMP_TYPE" >> $GITHUB_OUTPUT
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create Release-As commit for non-patch bumps
        if: steps.version-bump.outputs.bump_type != 'patch'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Create a commit with Release-As directive
          git commit --allow-empty -m "chore: release ${{ steps.version-bump.outputs.new_version }}

          Release-As: ${{ steps.version-bump.outputs.new_version }}"
          
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}